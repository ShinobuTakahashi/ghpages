window.gLocalAssetContainer["node_modules/@akashic-extension/akashic-direct-click-plugin/lib/DirectClickPlugin.js"] = function(g) { (function(exports, require, module, __filename, __dirname) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * ダイレクトクリック機能を提供するプラグイン。
 */
var DirectClickPlugin = /** @class */ (function () {
    function DirectClickPlugin(game, view, _option) {
        if (_option === void 0) { _option = {}; }
        this.game = game;
        this.view = view.view;
        this.operationTrigger = new g.Trigger();
        this._getScale = view.getScale ? function () { return view.getScale(); } : null;
        this._onClicked_bound = this._onClicked.bind(this);
    }
    DirectClickPlugin.isSupported = function () {
        return (typeof document !== "undefined") && (typeof document.addEventListener === "function");
    };
    DirectClickPlugin.prototype.start = function () {
        this.view.addEventListener("click", this._onClicked_bound, false);
        this.view.addEventListener("touchstart", this._onClicked_bound, false);
        return true;
    };
    DirectClickPlugin.prototype.stop = function () {
        this.view.removeEventListener("click", this._onClicked_bound, false);
        this.view.removeEventListener("touchstart", this._onClicked_bound, false);
    };
    DirectClickPlugin.prototype._onClicked = function (e) {
        var rect = this.view.getBoundingClientRect();
        var positionX = rect.left + window.pageXOffset;
        var positionY = rect.top + window.pageYOffset;
        var offsetX;
        var offsetY;
        if (typeof TouchEvent !== "undefined" && e instanceof TouchEvent) {
            var t = e.changedTouches[0];
            offsetX = t.pageX - positionX;
            offsetY = t.pageY - positionY;
        }
        else {
            offsetX = e.pageX - positionX;
            offsetY = e.pageY - positionY;
        }
        var scale = { x: 1, y: 1 };
        if (this._getScale) {
            scale = this._getScale();
        }
        var point = { x: offsetX / scale.x, y: offsetY / scale.y };
        var target = this.game.scene().findPointSourceByPoint(point).target;
        if (target && target.clickable) {
            target.clicked.fire();
        }
    };
    return DirectClickPlugin;
}());
module.exports = DirectClickPlugin;

})(g.module.exports, g.module.require, g.module, g.filename, g.dirname);
}